# Generated by Django 3.2.14 on 2022-08-08 10:24

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bath',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=55, verbose_name='Баня')),
            ],
            options={
                'verbose_name': 'Баня',
                'verbose_name_plural': 'Баня',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='BathroomType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Тип санузла')),
            ],
            options={
                'verbose_name': 'Тип санузла',
                'verbose_name_plural': 'Тип санузла',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Electricity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=55, verbose_name='Электроснабжение')),
            ],
            options={
                'verbose_name': 'Электроснабжение',
                'verbose_name_plural': 'Электроснабжение',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ElevatorType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Тип лифта')),
            ],
            options={
                'verbose_name': 'Тип лифта',
                'verbose_name_plural': 'Тип лифта',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='FlatState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Состояние')),
            ],
            options={
                'verbose_name': 'Состояние',
                'verbose_name_plural': 'Состояние',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ForestNearly',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=55, verbose_name='Лес рядом')),
            ],
            options={
                'verbose_name': 'Лес рядом',
                'verbose_name_plural': 'Лес рядом',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Garage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=55, verbose_name='Гараж')),
            ],
            options={
                'verbose_name': 'Гараж',
                'verbose_name_plural': 'Гараж',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Gas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=55, verbose_name='Газ')),
            ],
            options={
                'verbose_name': 'Газ',
                'verbose_name_plural': 'Газ',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='GoodRoad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=55, verbose_name='Асфальтовая дорога')),
            ],
            options={
                'verbose_name': 'Асфальтовая дорога',
                'verbose_name_plural': 'Асфальтовая дорога',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Greenhouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=55, verbose_name='Теплица')),
            ],
            options={
                'verbose_name': 'Теплица',
                'verbose_name_plural': 'Теплица',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='InCityObjectType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Тип объекта')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Тип объекта',
                'verbose_name_plural': 'Тип объекта',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='InCityRegion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Район города')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Район города',
                'verbose_name_plural': 'Район города',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Landings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=55, verbose_name='Посадки')),
            ],
            options={
                'verbose_name': 'Посадки',
                'verbose_name_plural': 'Посадки',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='MetroStation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Станция метро')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Станцию метро',
                'verbose_name_plural': 'Станция метро',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ObjectConstruction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='тип стройматериалов')),
            ],
            options={
                'verbose_name': 'тип стройматериалов',
                'verbose_name_plural': 'тип стройматериалов',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='OutCityObjectType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Тип объекта')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Тип объекта',
                'verbose_name_plural': 'Тип объекта',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='RoomAmount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=25, verbose_name='Количество комнат')),
            ],
            options={
                'verbose_name': 'Количество комнат',
                'verbose_name_plural': 'Количество комнат',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Security',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=55, verbose_name='Охрана')),
            ],
            options={
                'verbose_name': 'Охрана',
                'verbose_name_plural': 'Охрана',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ShopNearly',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=55, verbose_name='Магазин рядом')),
            ],
            options={
                'verbose_name': 'Магазин рядом',
                'verbose_name_plural': 'Магазин рядом',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='TypeOfOwnership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=155, verbose_name='форма собственности')),
            ],
            options={
                'verbose_name': 'форму собственности',
                'verbose_name_plural': 'форма собственности',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Water',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=55, verbose_name='Вода')),
            ],
            options={
                'verbose_name': 'Вода',
                'verbose_name_plural': 'Вода',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='WaterNearly',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=55, verbose_name='Водоем рядом')),
            ],
            options={
                'verbose_name': 'Водоем рядом',
                'verbose_name_plural': 'Водоем рядом',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='WinterAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=55, verbose_name='Доступ зимой')),
            ],
            options={
                'verbose_name': 'Доступ зимой',
                'verbose_name_plural': 'Доступ зимой',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='OutCityObject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('price', models.CharField(max_length=255, verbose_name='Цена')),
                ('is_for_sale', models.BooleanField(default=True, verbose_name='Продажа')),
                ('is_for_rent', models.BooleanField(default=False, verbose_name='Аренда')),
                ('is_hot', models.BooleanField(default=False, verbose_name='горячий вариант')),
                ('object_adress', models.CharField(blank=True, max_length=255, verbose_name='адрес объекта')),
                ('city_distance', models.CharField(blank=True, max_length=255, verbose_name='расстояние до города')),
                ('land_square', models.CharField(blank=True, max_length=255, verbose_name='площадь участка')),
                ('square', models.CharField(blank=True, max_length=255, verbose_name='площадь дома')),
                ('year', models.CharField(blank=True, max_length=25, verbose_name='год постройки')),
                ('transport_distance', models.CharField(blank=True, max_length=255, verbose_name='расстояние до транспорта')),
                ('content', ckeditor.fields.RichTextField(blank=True, verbose_name='текстовое описание')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('time_update', models.DateTimeField(auto_now=True, verbose_name='Время изменения')),
                ('is_published', models.BooleanField(default=True, verbose_name='Публикация')),
                ('bath', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='agency.bath', verbose_name='Баня')),
                ('bathroom', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='agency.bathroomtype', verbose_name='Туалет')),
                ('construction', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='agency.objectconstruction', verbose_name='тип постройки')),
                ('electricity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='agency.electricity', verbose_name='Электричество')),
                ('forest_nearly', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='agency.forestnearly', verbose_name='Лес рядом')),
                ('garage', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='agency.garage', verbose_name='Гараж')),
                ('gas', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='agency.gas', verbose_name='Газ')),
                ('good_road', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='agency.goodroad', verbose_name='Асфальтовая дорога')),
                ('greenhouse', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='agency.greenhouse', verbose_name='Теплица')),
                ('landings', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='agency.landings', verbose_name='Посадки')),
                ('object_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='agency.outcityobjecttype', verbose_name='тип объекта')),
                ('security', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='agency.security', verbose_name='Охрана')),
                ('shop_nearly', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='agency.shopnearly', verbose_name='Магазин рядом')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='agency.flatstate', verbose_name='состояние')),
                ('type_of_ownership', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='agency.typeofownership', verbose_name='форма собственности')),
                ('water', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='agency.water', verbose_name='Вода')),
                ('water_nearly', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='agency.waternearly', verbose_name='Водоем рядом')),
                ('winter_access', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='agency.winteraccess', verbose_name='Доступ зимой')),
            ],
        ),
        migrations.CreateModel(
            name='InCityObject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('price', models.CharField(max_length=255, verbose_name='Цена')),
                ('is_for_sale', models.BooleanField(default=True, verbose_name='Продажа')),
                ('is_for_rent', models.BooleanField(default=False, verbose_name='Аренда')),
                ('is_hot', models.BooleanField(default=False, verbose_name='горячий вариант')),
                ('object_adress', models.CharField(blank=True, max_length=255, verbose_name='адрес объекта')),
                ('metro_distance', models.CharField(blank=True, max_length=255, verbose_name='расстояние до метро')),
                ('square', models.CharField(blank=True, max_length=255, verbose_name='общая площадь')),
                ('live_square', models.CharField(blank=True, max_length=255, verbose_name='жилая площадь')),
                ('kitchen', models.CharField(blank=True, max_length=255, verbose_name='площадь кухни')),
                ('rooms_layout', models.CharField(blank=True, max_length=255, verbose_name='планировка')),
                ('floor', models.CharField(blank=True, max_length=25, verbose_name='Этаж')),
                ('year', models.CharField(blank=True, max_length=25, verbose_name='Год постройки / Сдачи')),
                ('content', ckeditor.fields.RichTextField(blank=True, verbose_name='текстовое описание ')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('time_update', models.DateTimeField(auto_now=True, verbose_name='Время изменения')),
                ('is_published', models.BooleanField(default=True, verbose_name='Публикация')),
                ('bathroom', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='agency.bathroomtype', verbose_name='санузел')),
                ('city_region', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='agency.incityregion', verbose_name='район города')),
                ('construction', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='agency.objectconstruction', verbose_name='тип постройки')),
                ('elevator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='agency.elevatortype', verbose_name='лифт')),
                ('metro', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='agency.metrostation', verbose_name='станция метро')),
                ('object_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='agency.incityobjecttype', verbose_name='тип объекта')),
                ('rooms', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='agency.roomamount', verbose_name='количество комнат')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='agency.flatstate', verbose_name='состояние')),
            ],
        ),
    ]
